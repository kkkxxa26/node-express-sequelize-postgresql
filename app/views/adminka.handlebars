
<body>
  <header>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <link rel="stylesheet" href="/stylesheets/modal.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  
    <div class="header-left-text">Админ-панель</div>
    <div class="header-right">
      <div class="user-avatar">
        <i class="fas fa-user"></i>
        <div class="site-header">{{user.dataValues.name}}</div>
      </div>
      <div class="logout-icon" onclick="handleLogout()" title="Выйти">
        <i class="fas fa-sign-out-alt"></i>
      </div>
    </div>
  </header>


  <!-- Секции навигации -->
<div class="nav-buttons">
  <button class="nav-btn active" data-section="users-section">Пользователи</button>
  <button class="nav-btn" data-section="lectures-section">Лекции</button>
  <button class="nav-btn" data-section="tests-section">Тесты</button>
  <button id="abody" data-section="body-section">Вопросы</button>
  <button id="aans" data-section="ans-section">Ответы</button>
  <button class="nav-btn" data-section="stats-section">Статистика</button>
</div>

<!-- Контейнер для секций -->
<div class="section-grid">

  <!-- Секция пользователей -->
  <div id="users-section" class="section active">
    <h2>Список пользователей</h2>
    <table id="user-table" class="user-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>ФИО</th>
          <th>Email</th>
          <th>Телефон</th>
          <th>Дата рождения</th>
          <th>Пол</th>
          <th>Роль</th>
          <th>Действия</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <!-- Секция лекций -->
  <div id="lectures-section" class="section" style="display: none;">
    <h2>Список лекций</h2>
    <table id="lecture-table" class="user-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>Заголовок</th>
          <th>Описание</th>
          <th>Дата создания</th>
          <th>Действия</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
    <div class="table-footer">
      <button id="add-lecture-btn" class="floating-add-btn">Добавить лекцию</button>
    </div>
  </div>

  <!-- Секция тестов -->
  <div id="tests-section" class="section" style="display: none;">
    <h2>Список тестов</h2>
    <table id="test-table" class="user-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>Заголовок</th>
          <th>Действия</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
    <div class="table-footer">
      <button id="add-test-btn" class="floating-add-btn">Добавить тест</button>
      <button id="add-answer-btn" style="display: none;">Добавить ответ</button>
      <button id="add-question-btn" style="display: none;">Добавить вопрос</button>
    </div>
  </div>

  <!-- Секция статистики -->
  <div id="stats-section" class="section" style="display: none;">
    <h2>Статистика</h2>
    <table id="stats-table" class="user-table">
      <thead>
        <tr id="stats-header"></tr>
      </thead>
      <tbody id="stats-body"></tbody>
    </table>
  </div>
</div>

<!-- Модальное окно формы -->
<div id="form-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <h3 id="form-modal-title">Форма</h3>
    <div class="modal-content">
      <form id="entity-form">
        <div id="form-fields"></div>
        <div class="modal-actions">
          <button type="submit" class="modal-btn primary">Сохранить</button>
          <button type="button" class="modal-btn" id="form-cancel">Отмена</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Модальное окно подтверждения удаления lecture/user -->
<div id="confirm-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <p id="confirm-message" style="margin-top: 16px; margin-bottom: 16px;">Вы уверены, что хотите удалить?</p>
    <div class="modal-actions">
      <button id="confirm-yes" class="modal-btn danger">Удалить</button>
      <button id="confirm-no" class="modal-btn">Отмена</button>
    </div>
  </div>
</div>

<!-- Модальное окно подтверждения удаления test/question/answer -->
<div id="confirmDeleteTAQ" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="modal-content">
      <p style="margin-top: 16px; margin-bottom: 16px;">Вы уверены, что хотите удалить этот элемент?</p>
      <div class="modal-btn-group">
        <button id="confirm-taq-yes" class="modal-btn">Да</button>
        <button id="confirm-taq-no" class="modal-btn">Нет</button>
      </div>
    </div>
  </div>
</div>

<!-- Модалка добавления ответа -->
<div id="add-answer-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="form-fields" style="margin-bottom: 16px;">
      <h3>Добавить ответ</h3>
      <input id="new-answer-title" type="text" placeholder="Текст ответа">
      <select id="new-answer-correct">
        <option value="false">Неправильный</option>
        <option value="true">Правильный</option>
      </select>
    </div>
    <div class="modal-actions">
      <button onclick="submitNewAnswer()">Сохранить</button>
      <button onclick="closeAddAnswerModal()">Отмена</button>
    </div>
  </div>
</div>

<!-- Модальное окно для добавления вопроса -->
<div id="add-body-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="modal-content">
      <h2>Добавить вопрос</h2>
      <input type="text" id="new-body-title" style="width: 568px; margin-bottom: 16px;" placeholder="Введите текст вопроса" />
      <div class="modal-actions">
        <button class="modal-btn" style="background-color: #28a745;" onclick="submitNewBody()">Сохранить</button>
        <button class="modal-btn" onclick="closeAddBodyModal()">Отмена</button>
      </div>
    </div>
  </div>
</div>

<!-- Модальное окно для редактирования вопроса -->
<div id="edit-body-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="modal-content">
      <h2>Редактировать вопрос</h2>
      <div style="align-items: baseline;">
        <label for="edit-body-title" style="display: inline; margin-right: 488px;">Текст вопроса:</label>
        <input id="edit-body-title" type="text" style="width: 600px; justify-content: center; margin-top: 5px;" placeholder="Введите вопрос" />
      </div>
    </div>
    <div class="modal-actions">
      <button class="modal-btn" style="background-color: #28a745;" onclick="submitEditBody()">Сохранить</button>
      <button class="modal-btn cancel" onclick="closeEditBodyModal()">Отмена</button>
    </div>
  </div>
</div>

<!-- Модальное окно для добавления теста -->
<div id="add-test-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="modal-content">
      <h3>Добавить тест</h3>
      <label for="new-test-title" style="display: inline; margin-right: 488px;">Название теста:</label>
      <input id="new-test-title" type="text" style="width: 600px; justify-content: center; margin-top: 5px;" placeholder="Введите название">
    </div>
    <div class="modal-actions">
      <button class="modal-btn" style="background-color: #28a745;" onclick="submitNewTest()">Сохранить</button>
      <button class="modal-btn" onclick="closeAddTestModal()">Отмена</button>
    </div>
  </div>
</div>

<!-- Модальное окно для редактирования теста -->
<div id="edit-test-modal" class="modal-overlay" style="display: none;">
  <div class="modal-window">
    <div class="modal-content">
      <h3>Редактирование теста</h3>
      <label for="edit-test-title" style="display: inline;">Название теста:</label>
      <input id="edit-test-title" type="text" style="width: 600px; justify-content: center; margin-top: 5px;" placeholder="Введите название теста">
    </div>
    <div class="modal-actions">
      <button class="modal-btn" style="background-color: #28a745;" onclick="submitEditTest()">Сохранить</button>
      <button class="modal-btn" onclick="closeEditTestModal()">Отмена</button>
    </div>
  </div>
</div>


  <!-- ______________________________________________________________ JS логика ______________________________________________________________-->
  <script>

    let formMode = 'add'; // 'add' | 'edit'
    let currentEntityType = null; // 'lecture' | 'user'
    let currentEditId = null;
  
  // Открытие модального окна с формой
  function openFormModal(entityType, entityData = null) {
    formMode = entityData ? 'edit' : 'add';
    currentEntityType = entityType;
    currentEditId = entityData?.id || null;
    
//______________________________________________________________редактирование и добавление user || lecture______________________________________________________________-->
  
    $('#form-fields').empty();
    if (entityType === 'lecture') {
        $('#form-modal-title').text(formMode === 'edit' ? 'Редактировать лекцию' : 'Добавить лекцию');
        $('#form-fields').append(`
            <label>Название</label>
            <input type="text" name="title" required value="${entityData?.title || ''}">
            <label>Содержимое</label>
            <textarea name="content" required>${entityData?.content || ''}</textarea>
        `);
    } else if (entityType === 'user') {
        $('#form-modal-title').text(formMode === 'edit' ? 'Редактировать пользователя' : 'Добавить пользователя');
        $('#form-fields').append(`
            <label>Фамилия</label>
            <input type="text" name="surname" required value="${entityData?.surname || ''}">
            <label>Имя</label>
            <input type="text" name="name" required value="${entityData?.name || ''}">
            <label>Email</label>
            <input type="email" name="email" required value="${entityData?.email || ''}">
            <label>Телефон</label>
            <input type="text" name="phoneNumber" value="${entityData?.phoneNumber || ''}">
            <label>Дата рождения</label>
            <input type="date" name="birthDate" value="${entityData?.birthDate?.split('T')[0] || ''}">
            <label>Пол</label>
            <select name="gender">
              <option value="Мужской" ${entityData?.gender === 'Мужской' ? 'selected' : ''}>Мужской</option>
              <option value="Женский" ${entityData?.gender === 'Женский' ? 'selected' : ''}>Женский</option>
            </select>
            <label>Роль</label>
            <select name="role">
              <option value="user" ${entityData?.role === 'user' ? 'selected' : ''}>Пользователь</option>
              <option value="admin" ${entityData?.role === 'admin' ? 'selected' : ''}>Администратор</option>
            </select>
        `);
    }

    $('#form-modal').fadeIn();
}

    // Закрытие формы
    $('#form-cancel').on('click', () => {
      $('#form-modal').fadeOut();
      currentEditId = null;
    });

    // Сохранение формы (добавление или редактирование user || lecture)
    $('#entity-form').on('submit', function (e) {
      console.log(currentEntityType,  formMode, 1)
      e.preventDefault();
      const formData = Object.fromEntries(new FormData(this).entries());
        console.log(formData, 'form data')

      let url = '';
      let method = formMode === 'edit' ? 'PUT' : 'POST';

      if (currentEntityType === 'lecture') {
        url = formMode === 'edit' ? `/api/lections/${currentEditId}` : '/api/lections/';
      } else if (currentEntityType === 'user') {
        url = formMode === 'edit' ? `/api/users/${currentEditId}` : '/api/users/';
      } 
      
      $.ajax({
        url,
        method,
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: () => {
          $('#form-modal').fadeOut();
          currentEditId = null;
          if (currentEntityType === 'lecture') loadLectures();
          else if (currentEntityType === 'user') loadUsers();
        },
        error: () => alert("Ошибка при сохранении.")
      });
    });

    // Получение данных для редактирования
    function editLecture(id) {
      $.get(`/api/lections/${id}`, data => openFormModal('lecture', data));
    }
    function editUser(id) {
     $.get(`/api/users/${id}`, data => openFormModal('user', data));
    }
//______________________________________________________________удаление user || lecture || test______________________________________________________________-->
    
    let itemToDelete = { id: null, type: null };

    function confirmDelete(id, type) {
      itemToDelete = { id, type };
      const entityName = type === 'user' ? 'пользователя' : type === 'lecture' ? 'лекцию' : 'тест';
      $('#confirm-message').text(`Вы уверены, что хотите удалить ${entityName}?`);
      $('#confirm-modal').fadeIn();
    }

    $('#confirm-yes').on('click', function () {
      if (!itemToDelete.id || !itemToDelete.type) return;

      let url = '';
      switch (itemToDelete.type) {
        case 'user': url = `/api/users/${itemToDelete.id}`; break;
        case 'lecture': url = `/api/lections/${itemToDelete.id}`; break;
        case 'test': url = `/api/lab/head/${itemToDelete.id}`; break;
      }

      $.ajax({
        url,
        method: 'DELETE',
        success: () => {
          $('#confirm-modal').fadeOut();
          if (itemToDelete.type === 'user') loadUsers();
          else if (itemToDelete.type === 'lecture') loadLectures();
          else if (itemToDelete.type === 'test') loadTests();
          itemToDelete = { id: null, type: null };
        },
        error: () => {
          alert("Ошибка при удалении");
          $('#confirm-modal').fadeOut();
        }
      });
    });

    $('#confirm-no').on('click', function () {
      itemToDelete = { id: null, type: null };
      $('#confirm-modal').fadeOut();
    });


//______________________________________________________________статистика______________________________________________________________-->
function loadStats() {
  $.get('/api/lab/user-stats', res => {
    const { tests, users, data } = res;
    
    let headerHtml = '<th>Пользователь</th>';
    tests.forEach(test => {
      headerHtml += `<th>${test}</th>`;
    });

    $('#stats-header').html(headerHtml);
    let bodyHtml = '';
    users.forEach(user => {
      let row = `<tr><td>${user}</td>`;
      tests.forEach(test => {
        const value = data[user] && data[user][test] ? data[user][test] : '-';
        row += `<td>${value}</td>`;
      });
      row += '</tr>';
      bodyHtml += row;
    });
    $('#stats-body').html(bodyHtml);
  });
}
//______________________________________________________________пользователи______________________________________________________________-->
function loadUsers() {
    const tbody = $('#user-table tbody').empty();
    $.get('/api/users', data => {
      if (!Array.isArray(data) || data.length === 0) {
        tbody.append('<tr><td colspan="8">Нет пользователей.</td></tr>');
        return; }
         data.forEach(user => {
           const row = `
            <tr>
              <td>${user.id}</td>
              <td>${user.surname} ${user.name}</td>
              <td>${user.email}</td>
              <td>${user.phoneNumber}</td>
              <td>${new Date(user.birthDate).toLocaleDateString()}</td>
              <td>${user.gender}</td>
              <td>${user.role}</td>
              <td class="action-buttons">
                <button class="icon-button edit" onclick="editUser(${user.id})" title="Редактировать">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="icon-button delete" onclick="confirmDelete(${user.id}, 'user')" title="Удалить">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </td>
            </tr>
          `;
          tbody.append(row);
        });
      });
    }

//______________________________________________________________лекции______________________________________________________________
    function loadLectures() {
    const tbody = $('#lecture-table tbody').empty();
      $.get('/api/lections', data => {
        if (!Array.isArray(data) || data.length === 0) {
          tbody.append('<tr><td colspan="5">Нет доступных лекций.</td></tr>');
          return;
        }
        data.forEach(lecture => {
          const row = `
            <tr>
              <td>${lecture.id}</td>
              <td>${lecture.title}</td>
              <td>${lecture.content || ''}</td>
              <td>${new Date(lecture.createdAt).toLocaleDateString()}</td>
              <td class="action-buttons">
                <button class="icon-button edit" onclick="editLecture(${lecture.id})" title="Редактировать">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="icon-button delete" onclick="confirmDelete(${lecture.id}, 'lecture')" title="Удалить">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </td>
            </tr>
          `;
          tbody.append(row);
        });
      });
    }
   
// ______________________________________________________________выход______________________________________________________________
    function handleLogout() {
      window.location.href = '/logout';
    }
    $(document).ready(() => {
      $('.nav-btn').on('click', function () {
        const target = $(this).data('section');
        $('.nav-btn').removeClass('active');
        $(this).addClass('active');
        $('.section').hide();
        $('#' + target).show();

        if (target === 'lectures-section') loadLectures();
        else if (target === 'tests-section') loadTests();
        else if (target === 'stats-section') {loadStats();
        } else loadUsers();
      });

      // Кнопки добавления
      $('#add-lecture-btn').on('click', () => openFormModal('lecture'));
      $('#add-test-btn').on('click', () => openFormModal('test'));

      // Первая загрузка пользователей
      loadUsers();
    });

//______________________________________________________________тесты______________________________________________________________
    function loadTests() {
  
     $('#abody, #aans').removeClass("active");
      
      $('#add-test-btn').html("Добавить тест").off("click").on("click", showAddTestModal);

      const tbody = $('#test-table tbody').empty();
      $.get('/api/lab/allHead', data => {
        if (!Array.isArray(data) || data.length === 0) {
          tbody.append('<tr><td colspan="3">Тесты не найдены.</td></tr>');
          return;
        }
        data.forEach(test => {
          const row = `
            <tr>
              <td>${test.id}</td>
              <td>${test.title}</td>
              <td class="action-buttons">

                <button class="icon-button edit" onclick="editTest(${test.id})" title="Редактировать">
                  <i class="fas fa-edit"></i>
                </button>

                <button class="icon-button delete" onclick="confirmDelete(${test.id}, 'test')" title="Удалить">
                  <i class="fas fa-trash-alt"></i>
                </button>

                <button class="icon-button question"  onclick="loadLabBody(${test.id})" title="Вопросы">
                  <i class="fas fa-question"></i>
                </button>

              </td>
            </tr>
          `;
          tbody.append(row);
        });
      });
    }

  function showAddTestModal() {
  $('#add-test-modal').fadeIn();
  }
  
  function closeAddTestModal() {
  $('#add-test-modal').fadeOut();
  $('#new-test-title').val('');
}

function submitNewTest() {
  const title = $('#new-test-title').val().trim();
  if (!title) {
    alert("Введите название теста.");
    return;
  }

  $.ajax({
    url: '/api/lab/head',
    method: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({ title }),
    success: () => {
      closeAddTestModal();
      loadTests();
    },
    error: () => {
      alert("Ошибка при добавлении теста.");
    }
  });
}

function editTest(test_id) {
  $.get('/api/lab/oneHead/' + test_id, data => {
    $('#edit-test-modal').fadeIn();
    $('#edit-test-modal').data('test-id', test_id);
    $('#edit-test-title').val(data.title);
  }).fail(() => {
    alert("Ошибка загрузки теста.");
  });
}

function closeEditTestModal() {
  $('#edit-test-modal').fadeOut();
  $('#edit-test-title').val('');
}

function submitEditTest() {
  const test_id = $('#edit-test-modal').data('test-id');
  const newTitle = $('#edit-test-title').val().trim();

  if (!newTitle) {
    alert("Введите название теста.");
    return;
  }

  $.ajax({
    url: '/api/lab/head/' + test_id,
    method: 'PUT',
    contentType: 'application/json',
    data: JSON.stringify({ title: newTitle }),
    success: () => {
      closeEditTestModal();
      loadTests();
    },
    error: () => {
      alert("Ошибка при обновлении теста.");
    }
  });
}

// ______________________________________________________________вопросы______________________________________________________________
function loadLabBody(head_id) {

  $('#ahead, #abody, #aans').removeClass("active");
  $('#abody').addClass("active");

  $('#add-test-btn').html("Добавить вопрос").off("click").on("click", showAddBodyModal);

  // Таблица и её очистка
  const tbody = $('#test-table tbody').empty();
  tbody.attr("head_id", head_id); // сохраняем ID в DOM

  // Загружаем вопросы по head_id
  $.get('/api/lab/allBody?head_id=' + head_id, data => {
    if (!Array.isArray(data) || data.length === 0) {
      tbody.append('<tr><td colspan="3">Вопросы не найдены.</td></tr>');
      return;
    }

    // Формируем строки таблицы
    data.forEach(labBody => {
      const row = `
        <tr>
          <td>${labBody.id}</td>
          <td>${labBody.title}</td>
          <td class="action-buttons">
            <button class="icon-button edit" onclick="editLabBody(${labBody.id})" title="Редактировать">
              <i class="fas fa-edit"></i>
            </button>
            <button class="icon-button delete" onclick="confirmDeleteTAQ(${labBody.id}, 'question')" title="Удалить">
              <i class="fas fa-trash-alt"></i>
            </button>
            <button class="icon-button check" onclick="loadLabAnswers(${labBody.id})" title="Ответы">
              <i class="fas fa-check"></i>
            </button>
          </td>
        </tr>
      `;
      tbody.append(row);
    });
  });
}


function showAddBodyModal() {
  const head_id = $('#test-table tbody').attr('head_id');
  if (!head_id) {
    alert("Ошибка: не выбран блок вопросов.");
    return;
  }
  $('#add-body-modal').fadeIn();
  $('#add-body-modal').data('head-id', head_id);
}

function closeAddBodyModal() {
  $('#add-body-modal').fadeOut();
  $('#new-body-title').val('');
}

function submitNewBody() {
  const title = $('#new-body-title').val().trim();
  const head_id = $('#add-body-modal').data('head-id');

  if (!title) {
    alert("Введите текст вопроса.");
    return;
  }

  $.ajax({
    url: '/api/lab/body',
    method: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({
      title: title,
      head_id: head_id
    }),
    success: () => {
     // alert("Вопрос добавлен.");
      closeAddBodyModal();
      loadLabBody(head_id); 
    },
    error: () => {
      alert("Ошибка при добавлении вопроса.");
    }
  });
}

function editLabBody(body_id) {
  $.get('/api/lab/OneBody/' + body_id, data => {
    $('#edit-body-modal').fadeIn();
    $('#edit-body-modal').data('body-id', body_id);
    $('#edit-body-title').val(data.title);
  }).fail(() => {
    alert("Ошибка загрузки вопроса.");
  });
}

function closeEditBodyModal() {
  $('#edit-body-modal').fadeOut();
  $('#edit-body-title').val('');
}

function submitEditBody() {
  const body_id = $('#edit-body-modal').data('body-id');
  const newTitle = $('#edit-body-title').val().trim();

  if (!newTitle) {
    alert("Введите текст вопроса.");
    return;
  }

  $.ajax({
    url: '/api/lab/body/' + body_id,
    method: 'PUT',
    contentType: 'application/json',
    data: JSON.stringify({ title: newTitle }),
    success: () => {
      closeEditBodyModal();
      const head_id = $('#test-table tbody').attr('head_id');
      loadLabBody(head_id);
    },
    error: () => {
      alert("Ошибка при обновлении вопроса.");
    }
  });
}


//______________________________________________________________ответы______________________________________________________________
  
  
  function loadLabAnswers(body_id) {

  $('#abody, #aans').removeClass("active");
  $('#aans').addClass("active");
  
  // Скрыть все кнопки
  $('#add-test-btn, #add-question-btn, #add-answer-btn').hide();

  // Показать только кнопку добавления ответа
  $('#add-answer-btn')
    .show()
    .off('click')
    .on('click', () => showAddAnswerModal(body_id)); // вызвать модалку
    
  
  const tbody = $('#test-table tbody').empty();
  tbody.attr("body_id", body_id);

  $.get('/api/lab/allAnswer?body_id=' + body_id, data => {
    if (!Array.isArray(data) || data.length === 0) {
      tbody.append('<tr><td colspan="3">Ответы не найдены.</td></tr>');
      return;
    }
    data.forEach(LabAnswer => {
      const row = `
        <tr>
          <td>${LabAnswer.id}</td>
          <td>${LabAnswer.title}</td>
          
          <td class="action-buttons">
            <select name="check" data-id="${LabAnswer.id}" class="check-select">
              <option value="true" ${LabAnswer.check === true ? 'selected' : ''}>Правильный ответ</option>
              <option value="false" ${LabAnswer.check === false ? 'selected' : ''}>Неправильный ответ</option>
            </select>

            <button class="icon-button save" onclick="saveAnswerCheck(${LabAnswer.id})" title="Сохранить">
              <i class="fas fa-check"></i>
            </button>

            <button class="icon-button delete" onclick="confirmDeleteTAQ(${LabAnswer.id}, 'answer')" title="Удалить">
              <i class="fas fa-trash-alt"></i>
            </button>
          </td>
        </tr>
      `;
      tbody.append(row);
    });
  });
}

//______________________________________________________________редактирование ответов через селект______________________________________________________________

function saveAnswerCheck(answer_id) {
  const select = $(`select.check-select[data-id="${answer_id}"]`);
  const value = select.val() === 'true'; // преобразование в boolean

  $.ajax({
    url: `/api/lab/answer/${answer_id}`,
    method: 'PUT',
    contentType: 'application/json',
    data: JSON.stringify({ id: answer_id, check: value }),
    success: () => {
     alert('Ответ обновлён');
    },
    error: () => {
      alert('Ошибка при сохранении правильности ответа.');
    }
  });
}

//______________________________________________________________ добавление ответов ______________________________________________________________-->


function showAddAnswerModal(body_id) {
  $('#add-answer-modal').fadeIn();
  $('#add-answer-modal').data('body-id', body_id);
}

function closeAddAnswerModal() {
  $('#add-answer-modal').fadeOut();
  $('#new-answer-title').val('');
  $('#new-answer-correct').val('false');
}

function submitNewAnswer() {
  const body_id = $('#add-answer-modal').data('body-id');
  const title = $('#new-answer-title').val().trim();
  const isCorrect = $('#new-answer-correct').val() === 'true';

  if (!title || !body_id) {
    alert('Введите текст ответа и убедитесь, что выбран вопрос.');
    return;
  }

  console.log('body_id:', body_id);
  console.log('title:', title);
  console.log('check:', isCorrect);

  $.ajax({
    url: '/api/lab/answer',
    method: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({ 
      title,
      check: isCorrect,
      lab_body_id: body_id 
      }), success: () => {
     // alert('Ответ добавлен');
      closeAddAnswerModal();
      loadLabAnswers(body_id);
    },
    error: (xhr) => {
      console.error(xhr.responseText);
      alert('Ошибка при добавлении: ' + xhr.responseText);
    }
  });
}


//______________________________________________________________удаление tate || question || answer ______________________________________________________________-->

let itemToDeleteTAQ = { id: null, type: null };
function confirmDeleteTAQ(id, type) {
  itemToDeleteTAQ = { id, type };
  $('#confirmDeleteTAQ').fadeIn(); // показать модалку
}

$('#confirm-taq-yes').on('click', () => {
  const { id, type } = itemToDeleteTAQ;
  if (!id || !type) return;

  let url;
  if (type === 'answer') {
    url = `/api/lab/answer/${id}`;
  } else if (type === 'question') {
    url = `/api/lab/body/${id}`;
  } else if (type === 'test') {
    url = `/api/lab/head/${id}`;
  } else {
    alert("Неизвестный тип элемента.");
    $('#confirmDeleteTAQ').fadeOut();
    return;
  }

  $.ajax({
    url: url,
    method: 'DELETE',
    success: () => {
     // alert("Удалено успешно");
      $('#confirmDeleteTAQ').fadeOut();

      if (type === 'answer') {
        const body_id = $('#test-table tbody').attr("body_id");
        loadLabAnswers(body_id);
      } else if (type === 'question') {
        const head_id = $('#test-table tbody').attr("head_id");
        loadLabBody(head_id);
      } else if (type === 'test') {
        loadLabHeads();
      }

      itemToDeleteTAQ = { id: null, type: null };
    },
    error: () => {
      alert("Ошибка при удалении.");
      $('#confirmDeleteTAQ').fadeOut();
      itemToDeleteTAQ = { id: null, type: null };
    }
  });
});

$('#confirm-taq-no').on('click', () => {
  itemToDeleteTAQ = { id: null, type: null };
  $('#confirmDeleteTAQ').fadeOut(); // закрыть модалку
});


    
  </script>
</body>
